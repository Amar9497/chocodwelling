<div class="min-h-screen flex flex-col">
    <!-- Navbar -->
    <%- include('navbar') %> 
    
    <%- include('alert') %>
  
    <!-- Header Section -->
    <!-- Main Layout -->
    <div class="flex flex-grow">
      <!-- Sidebar -->
      <aside
    class="bg-gradient-to-r from-[#E5E7EB] to-[#d2b69b] text-black w-64 py-6 px-4 hidden lg:block"
  >
    <nav class="space-y-6">
      <a
        href="/admin/home"
        class="flex items-center space-x-4 py-2 px-3 hover:bg-white rounded-lg"
      >
        <span>Dashboard</span>
      </a>
      <a
        href="/admin/products"
        class="flex items-center space-x-4 py-2 px-3 hover:bg-white rounded-lg"
      >
        <span>Products</span>
      </a>
      <a
        href="/admin/category"
        class="flex items-center space-x-4 py-2 px-3 hover:bg-white rounded-lg"
      >
        <span>Category</span>
      </a>
      <a
        href="/admin/brand"
        class="flex items-center space-x-4 py-2 px-3 hover:bg-white rounded-lg"
      >
        <span>Brand</span>
      </a>
      <a
        href="/admin/customers"
        class="flex items-center space-x-4 py-2 px-3 hover:bg-white rounded-lg"
      >
        <span>Customers</span>
      </a>
      <a
        href="/admin/orders"
        class="flex items-center space-x-4 py-2 px-3 hover:bg-white rounded-lg"
      >
        <span>Orders</span>
      </a>
      <a
        href="/admin/coupons"
        class="flex items-center space-x-4 py-2 px-3 hover:bg-white rounded-lg"
      >
        <span>Coupons</span>
      </a>
      <a
        href="/admin/offer"
        class="flex items-center space-x-4 py-2 px-3 bg-white text-black rounded-lg shadow-md"
      >
        <span class="poppins-semibold">Offers</span>
      </a>
      
    </nav>
  </aside>
  
      <!-- Main Content -->
      <main class="flex-1 p-6 bg-gray-100">
        <div class="flex flex-col md:flex-row justify-between items-center mb-6 space-y-4 md:space-y-0">
          <h2 class="text-2xl font-semibold text-gray-800">Offers</h2>
          <div class="flex items-center space-x-2">
            <form action="/admin/offer" method="get" class="flex items-center space-x-2">
              <input
                type="text"
                name="search"
                placeholder="Search by offer type"
                class="border border-gray-300 rounded-lg px-4 py-2"
                pattern="[A-Za-z\s]+"
                title="Only letters are allowed"
                onkeypress="return /[A-Za-z\s]/i.test(event.key)"
                value="<%= search %>"
              />
              <input
                type="submit"
                value="Search"
                class="bg-[#A79277] text-white px-4 py-2 rounded-lg cursor-pointer"
              />
            </form>
            <button
              type="button"
              class="bg-[#A79277] text-white px-6 py-2 rounded-lg shadow-md hover:opacity-90"
              onclick="openAddModal()"
              id="openModal"
            >
              Add Offer
            </button>
          </div>
        </div>
  
        <!-- Offers Table -->
        <div class="rounded-lg shadow-lg overflow-x-auto bg-white">
          <% if (offers && offers.length > 0) { %>
            <table class="w-full text-left text-base border-collapse">
              <thead class="bg-[#A79277] text-white">
                <tr>
                  <th class="py-4 px-5 text-center w-1/12">SL.No</th>
                  <th class="py-4 px-5 text-center w-1/12 ">Offer Type</th>
                  <th class="py-4 px-5 text-center w-1/12">Offer For</th>
                  <th class="py-4 px-5 text-center w-1/12">Discount Percent</th>
                  <th class="py-4 px-5 text-center w-1/12">Status</th>
                  <th class="py-4 px-5 text-center w-1/12">Action</th>
                </tr>
              </thead>
              <tbody class="divide-y divide-gray-200 bg-white">
                <% offers.forEach((offer, index) => { %>
                <tr class="hover:bg-gray-50">
                  <td class="px-4 py-2 text-center"><%= index + 1 %></td>
                  <td class="px-4 py-2 text-center"><%= offer.offerType %></td>
                  <td class="px-4 py-2 text-center"><%= offer.offerType === "Product" ? offer.referenceId.productName : offer.referenceId.categoryName %></td>
                  <td class="px-4 py-2 text-center"><%= offer.discountPercent %></td>
                  <td class="px-4 py-2 text-center">
                    <% if(offer.isActive) { %>
                    <span class="text-green-500 font-semibold">Active</span>
                    <% } else { %>
                    <span class="text-red-500 font-semibold">Disabled</span>
                    <% } %>
                  </td>
                  <td class="py-5 px-5  flex space-x-2 items-center justify-center">
                      <a href="#" class="text-blue-500 hover:underline"
                      onclick="editOffer({
                         id: '<%= offer._id %>',
                         type: '<%= offer.offerType %>',
                         reference: '<%= offer.offerType === 'Product' ? offer.referenceId.productName : offer.referenceId.categoryName %>',
                         discount: '<%= offer.discountPercent %>'
                      })">
                      ✏️
                   </a>
                   
                    <!-- <a
                      href="/admin/offerStatus?id=<%= offer._id %>&status=<%= offer.isActive %>"
                      class="text-red-500 hover:underline"
                      >❌</a> -->
                      <a
    href="/admin/offerStatus?id=<%= offer._id %>&status=<%= offer.isActive %>"
    class="text-red-500 hover:underline delete-offer"
    data-id="<%= offer._id %>"
    data-status="<%= offer.isActive %>"
>❌</a>
                  </td>
                </tr>
                <% }) %>
              </tbody>
            </table>
          <% } else { %>
            <div class="flex flex-col items-center justify-center py-12">
              <svg class="w-16 h-16 text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <h3 class="text-lg font-medium text-gray-900 mb-2">No Offers Found</h3>
              <p class="text-gray-500 text-center mb-4">
                <%= search ? `No offers found matching type "${search}"` : 'No offers have been created yet.' %>
              </p>
              <% if (search) { %>
                <a href="/admin/offer" class="text-[#8B7355] hover:text-[#A79277] font-medium transition-colors duration-300">
                  View All Offers
                </a>
              <% } %>
            </div>
          <% } %>
        </div>
  
        <!-- Pagination -->
        <div class="pagination-controls flex justify-center mt-4">
          <ul class="flex items-center space-x-2">
            <% if (currentPage > 1) { %>
            <li>
              <a
                href="/admin/offer?page=<%= currentPage - 1 %>&limit=<%= limit %>&search=<%= search %>"
                class="page-link px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition"
                ><<</a
              >
            </li>
            <% } %> <% for (let i = 1; i <= totalPages; i++) { %>
            <li>
              <a
                href="/admin/offer?page=<%= i %>&limit=<%= limit %>&search=<%= search %>"
                class="page-link px-4 py-2 rounded-md transition <%= currentPage == i ? 'bg-[#A0522D] text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300' %>"
                ><%= i %></a
              >
            </li>
            <% } %> <% if (currentPage < totalPages) { %>
            <li>
              <a
                href="/admin/offer?page=<%= currentPage + 1 %>&limit=<%= limit %>&search=<%= search %>"
                class="page-link px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition"
                >>></a
              >
            </li>
            <% } %>
          </ul>
        </div>
      </main>
    </div>
  
    <!-- Footer -->
    <%- include('footer') %>
  </div>
  
    <!-- --------------Add offer Modal--------------------- -->

    <div
      id="addCoupon"
      class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50 hidden"
    >
      <div
        class="bg-white rounded-lg shadow-xl w-full max-w-md transform transition-all duration-300 ease-in-out"
      >
        <!-- Your existing modal content -->
        <div class="modal-content">
          <div class="collection-container p-6 bg-white shadow-lg rounded-lg">
            <div class="flex justify-between items-center mb-4">
              <h2 class="text-xl font-bold">New Offer</h2>
              <button
                type="button"
                class="text-gray-500 hover:text-gray-700"
                onclick="closeAddModal()"
              >
                ×
              </button>
            </div>
            <!-- Rest of your form content remains the same -->
            <form
              class="form flex flex-col gap-4 pt-4"
              action="/admin/addOffer"
              method="post"
              id="addCoupon-form"
            >
              <div class="form-group">
                <label
                  for="offerType"
                  class="block text-sm font-medium text-gray-700"
                  >Offer Type</label
                >
                <select
                  name="offerType"
                  id="offerType"
                  class="form-control form-input mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:ring-blue-500 focus:border-blue-500"
                  required
                >
                  <option value="">Select Offer Type</option>
                  <option value="product">Product</option>
                  <option value="category">Category</option>
                </select>
              </div>
              <div class="form-group">
                <label
                  for="offerFor"
                  class="block text-sm font-medium text-gray-700"
                  >Offer For</label
                >
                <select
                  name="referenceId"
                  id="offerFor"
                  class="form-control form-input mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:ring-blue-500 focus:border-blue-500"
                  required
                >
                  <option value="">Select Offer For</option>
                </select>
              </div>
              <div class="form-group">
                <label
                  for="discount"
                  class="block text-sm font-medium text-gray-700"
                  >Discount (%)</label
                >
                <input
                  type="text"
                  name="discountPercent"
                  id="discount"
                  class="form-control form-input mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:ring-blue-500 focus:border-blue-500"
                  placeholder="Discount"
                  required
                />
              </div>
              <button
                type="submit"
                id="addCoupon-button"
                class="btn submit-btn w-full py-2 px-4 bg-blue-500 text-white rounded-md shadow-sm hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
              >
                Add Offer
              </button>
            </form>
            <!-- ... -->
          </div>
        </div>
      </div>
    </div>

    <!-- ----------------------------Edit offer Modal-------------------------- -->

    <div
      id="editCoupon"
      class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50 hidden"
    >
      <div
        class="bg-white rounded-lg shadow-xl w-full max-w-md transform transition-all duration-300 ease-in-out"
      >
        <div class="modal-content collection-modal">
          <div class="collection-container p-6">
            <div class="flex justify-between items-center mb-4">
              <h2 class="text-xl font-bold">Edit Offer</h2>
              <button
                type="button"
                class="text-gray-500 hover:text-gray-700"
                onclick="closeEditModal()"
              >
                ×
              </button>
            </div>
            <form
              class="form flex flex-col gap-4 pt-4"
              action="/admin/editOffer"
              method="post"
              id="editCoupon-form"
            >
              <input type="hidden" name="offerId" id="editCouponId" />
              <div class="form-group">
                <label
                  for="editOfferType"
                  class="block text-sm font-medium text-gray-700"
                  >Offer Type</label
                >
                <input
                  name="offerType"
                  id="editOfferType"
                  class="form-control form-input mt-1 block w-full rounded-md border-gray-300 shadow-sm bg-gray-200 focus:ring-blue-500 focus:border-blue-500"
                  readonly
                />
              </div>
              <div class="form-group">
                <label
                  for="editOfferFor"
                  class="block text-sm font-medium text-gray-700"
                  >Offer For</label
                >
                <input
                  name="referenceId"
                  id="editOfferFor"
                  class="form-control form-input mt-1 block w-full rounded-md border-gray-300 shadow-sm bg-gray-200 focus:ring-blue-500 focus:border-blue-500"
                  readonly
                />
              </div>
              <div class="form-group">
                <label
                  for="editDiscount"
                  class="block text-sm font-medium text-gray-700"
                  >Discount (%)</label
                >
                <input
                  type="text"
                  name="discountPercent"
                  id="editDiscount"
                  class="form-control form-input mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:ring-blue-500 focus:border-blue-500"
                  placeholder="Discount"
                  required
                />
              </div>
              <button
                type="submit"
                class="btn submit-btn w-full py-2 px-4 bg-blue-500 text-white rounded-md shadow-sm hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
              >
                Save Changes
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
    function openAddModal() {
        document.getElementById('addCoupon').classList.remove('hidden');
    }

    function closeAddModal() {
        document.getElementById('addCoupon').classList.add('hidden');
    }

    // Close modal when clicking outside
    document.getElementById('addCoupon').addEventListener('click', function(e) {
        if (e.target === this) {
            closeAddModal();
        }
    });

    // Convert products and categories to a usable format
    const products = <%- JSON.stringify(products) %>;
    const categories = <%- JSON.stringify(categories) %>

    // Function to populate the "Offer For" dropdown based on offer type
    function populateOfferForDropdown(offerType, selectElement, selectedValue = '') {
        selectElement.innerHTML = '<option value="">Select Offer For</option>';
        let options = [];

        if (offerType === 'product') {
            options = products.map(product => `<option value="${product._id}">${product.productName}</option>`);
        } else if (offerType === 'category') {
            options = categories.map(category => `<option value="${category._id}">${category.categoryName}</option>`);
        }

        selectElement.innerHTML += options.join('');

        if (selectedValue) {
            selectElement.value = selectedValue;
        }
    }

    // Event listener for the "Offer Type" dropdown in Add Offer modal
    document.getElementById('offerType').addEventListener('change', function () {
        populateOfferForDropdown(this.value, document.getElementById('offerFor'));
    });

    async function editOffer(offerData) {
        console.log('Edit Offer Data:', offerData); // Debug log

        // Show the modal
        document.getElementById('editCoupon').classList.remove('hidden');

        // Populate the form fields
        document.getElementById('editCouponId').value = offerData.id;
        document.getElementById('editOfferType').value = offerData.type;
        document.getElementById('editOfferFor').value = offerData.reference;
        document.getElementById('editDiscount').value = offerData.discount;
    }

    function closeEditModal() {
        document.getElementById('editCoupon').classList.add('hidden');

        // Clear the form fields when closing
        document.getElementById('editCouponId').value = '';
        document.getElementById('editOfferType').value = '';
        document.getElementById('editOfferFor').value = '';
        document.getElementById('editDiscount').value = '';
    }

    // Close modal when clicking outside
    document.getElementById('editCoupon').addEventListener('click', function(e) {
        if (e.target === this) {
            closeEditModal();
        }
    });

    // Add form submission handler with SweetAlert2
    document.getElementById('editCoupon-form').addEventListener('submit', async function(e) {
    e.preventDefault();

    try {
        const formData = {
            offerId: document.getElementById('editCouponId').value,
            offerType: document.getElementById('editOfferType').value,
            referenceId: document.getElementById('editOfferFor').value,
            discountPercent: document.getElementById('editDiscount').value
        };

        // Enhanced validation
        if (!formData.offerId || !formData.offerType || !formData.referenceId || !formData.discountPercent) {
            await Swal.fire({
                title: 'Error!',
                text: 'Please fill in all fields',
                icon: 'error',
                confirmButtonColor: '#3085d6'
            });
            return;
        }

        // Validate discount percentage
        const discount = parseFloat(formData.discountPercent);
        if (isNaN(discount) || discount < 0 || discount > 98) {
            await Swal.fire({
                title: 'Invalid Discount!',
                text: 'Discount must be between 0 and 98%',
                icon: 'error',
                confirmButtonColor: '#3085d6'
            });
            return;
        }

        // Show confirmation dialog
        const confirmResult = await Swal.fire({
            title: 'Are you sure?',
            text: "You want to update this offer?",
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, update it!',
            cancelButtonText: 'Cancel'
        });

        if (confirmResult.isConfirmed) {
            const response = await fetch('/admin/editOffer', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    ...formData,
                    discountPercent: discount
                })
            });

            // Check if response is ok
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            // Check if response is JSON
            const contentType = response.headers.get("content-type");
            if (!contentType || !contentType.includes("application/json")) {
                throw new TypeError("Received non-JSON response from server");
            }

            const data = await response.json();

            if (data.success) {
                await Swal.fire({
                    title: 'Success!',
                    text: 'Offer updated successfully',
                    icon: 'success',
                    timer: 1500,
                    showConfirmButton: false
                });
                closeEditModal();
                setTimeout(() => {
                    window.location.reload();
                }, 1500);
            } else {
                throw new Error(data.message || 'Failed to update offer');
            }
        }
    } catch (error) {
        console.error('Error:', error);
        let errorMessage = 'Something went wrong';

        if (error instanceof TypeError && error.message.includes('JSON')) {
            errorMessage = 'Server returned an invalid response. Please try again.';
        } else if (error.message.includes('HTTP error')) {
            errorMessage = 'Server error occurred. Please try again later.';
        } else {
            errorMessage = error.message || 'Failed to update offer';
        }

        await Swal.fire({
            title: 'Error!',
            text: errorMessage,
            icon: 'error',
            confirmButtonColor: '#3085d6'
        });
    }
});

// Add input validation for the discount field
document.getElementById('editDiscount').addEventListener('input', function(e) {
    let value = this.value.replace(/[^\d.]/g, ''); // Remove non-numeric characters except decimal
    value = value.replace(/(\..*)\./g, '$1'); // Allow only one decimal point
    
    const numValue = parseFloat(value);
    if (!isNaN(numValue)) {
        if (numValue < 0) {
            value = '0';
        } else if (numValue > 98) {
            value = '98';
        }
    }
    
    this.value = value;
});

    // Add error handling for fetch failures
    window.addEventListener('unhandledrejection', async function(event) {
        console.error('Unhandled promise rejection:', event.reason);
        await Swal.fire({
            title: 'Error!',
            text: 'Network error occurred. Please try again.',
            icon: 'error',
            confirmButtonColor: '#3085d6'
        });
    });

    // Add form validation before submission
    function validateForm(formData) {
        if (!formData.discountPercent || isNaN(formData.discountPercent) || 
            formData.discountPercent < 0 || formData.discountPercent > 100) {
            Swal.fire({
                title: 'Invalid Input!',
                text: 'Please enter a valid discount percentage between 0 and 100',
                icon: 'warning',
                confirmButtonColor: '#3085d6'
            });
            return false;
        }
        return true;
    }

</script>

<script>
    // Select all links with the `delete-offer` class
    document.querySelectorAll('.delete-offer').forEach((link) => {
        link.addEventListener('click', function (e) {
            e.preventDefault(); // Prevent the default link action

            const offerId = this.getAttribute('data-id');
            const status = this.getAttribute('data-status');

            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you really want to change the status of this offer?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, do it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Redirect to the URL if confirmed
                    window.location.href = `/admin/offerStatus?id=${offerId}&status=${status}`;
                }
            });
        });
    });
</script>