<style>
  /* Add these styles for SweetAlert customization */
  .swal2-popup {
      border-radius: 15px !important;
  }

  .swal2-title {
      color: #2c3e50 !important;
  }

  .swal2-content {
      color: #34495e !important;
  }

  .btn-brown {
      background-color: rgb(52, 52, 227) !important;
      color: white !important;
  }

  .btn-brown:hover {
      background-color: #6d86f3 !important;
  }

  @keyframes fadeInDown {
      from {
          opacity: 0;
          transform: translate3d(0, -20px, 0);
      }
      to {
          opacity: 1;
          transform: translate3d(0, 0, 0);
      }
  }

  .animated {
      animation-duration: 0.3s;
      animation-fill-mode: both;
  }

  .fadeInDown {
      animation-name: fadeInDown;
  }

  .product-box {
      position: relative;
  }

  .delete-link {
      transition: all 0.3s ease;
  }

  .delete-link:hover {
      transform: scale(1.1);
  }
</style>

<%- include('navbar') %>

<%- include('alert') %>

<div class="min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-7xl mx-auto">
        <!-- Header Section -->
        <div class="text-center mb-12">
            <h2 class="text-3xl md:text-4xl font-extrabold text-gray-900 mb-4">My Wishlist</h2>
            <div class="w-24 h-1 bg-[#8B7355] mx-auto rounded-full"></div>
        </div>

        <% if (wishlist.products && wishlist.products.length > 0) { %>
            <!-- Product Grid -->
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
                <% wishlist.products.forEach(product => { %>
                    <!-- Product Card -->
                    <div class="product-box relative bg-white rounded-2xl shadow-md hover:shadow-xl transition-all duration-300">
                        <!-- Delete Button -->
                        <button class="delete-link absolute top-4 right-4 z-10 bg-white p-2 rounded-full shadow-md 
                                     hover:bg-red-50 transition-all duration-300" 
                                data-id="<%= product._id %>">
                            <svg xmlns="http://www.w3.org/2000/svg" 
                                 class="h-6 w-6 text-red-500 hover:text-red-600" 
                                 fill="none" 
                                 viewBox="0 0 24 24" 
                                 stroke="currentColor">
                                <path stroke-linecap="round" 
                                      stroke-linejoin="round" 
                                      stroke-width="2" 
                                      d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                            </svg>
                        </button>

                        <!-- Discount Badge -->
                        <% if (product.productDiscount > 0) { %>
                            <div class="absolute top-4 left-4 z-10">
                                <div class="bg-red-500 text-white px-3 py-1.5 rounded-full text-sm font-semibold shadow-lg
                                            transform hover:scale-105 transition-transform duration-300">
                                    <%= product.productDiscount %>% OFF
                                </div>
                            </div>
                        <% } %>

                        <!-- Product Image -->
                        <div class="relative overflow-hidden">
                            <a href="/productDetail/<%= product.id %>" class="block">
                                <img src="<%= product.productImage[0] || '/default-image.jpg' %>"
                                     alt="<%= product.productName %>"
                                     class="w-full h-64 object-cover object-center transform hover:scale-105 transition-transform duration-300"
                                />
                            </a>
                        </div>

                        <!-- Product Details -->
                        <div class="p-6">
                            <div class="mb-6">
                                <h3 class="text-xl font-bold text-gray-900 mb-2 truncate hover:text-[#8B7355] transition-colors">
                                    <%= product.productName %>
                                </h3>
                                <p class="text-gray-600 text-sm mb-4 line-clamp-2">
                                    <%= product.productDescription %>
                                </p>
                                <!-- Price and Discount -->
                                <div class="flex items-baseline gap-2 mb-3">
                                    <% if (product.productDiscount > 0) { %>
                                        <span class="text-2xl font-bold text-[#8B7355]">
                                            ₹<%= Math.round(product.productVariants[0].price * (1 - product.productDiscount/100)) %>
                                        </span>
                                        <span class="text-sm text-gray-500 line-through">
                                            ₹<%= product.productVariants[0].price %>
                                        </span>
                                    <% } else { %>
                                        <span class="text-2xl font-bold text-[#8B7355]">
                                            ₹<%= product.productVariants[0].price %>
                                        </span>
                                    <% } %>
                                </div>
                            </div>

                            <!-- Add to Cart Button -->
                            <button onclick="addToCart('<%= product._id %>')"
                                    class="w-full bg-[#8B7355] text-white py-3 px-4 rounded-lg hover:bg-[#A79277] 
                                           transform hover:-translate-y-0.5 transition-all duration-300 
                                           focus:outline-none focus:ring-2 focus:ring-[#8B7355] focus:ring-offset-2
                                           flex items-center justify-center space-x-2">
                                <svg xmlns="http://www.w3.org/2000/svg" 
                                     class="h-5 w-5" 
                                     fill="none" 
                                     viewBox="0 0 24 24" 
                                     stroke="currentColor">
                                    <path stroke-linecap="round" 
                                          stroke-linejoin="round" 
                                          stroke-width="2" 
                                          d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                                </svg>
                                <span>Add to Cart</span>
                            </button>
                        </div>
                    </div>
                <% }); %>
            </div>
        <% } else { %>
            <!-- Empty State -->
            <div class="text-center bg-white rounded-2xl shadow-md p-12 max-w-lg mx-auto">
                <svg class="w-24 h-24 mx-auto text-gray-400 mb-6" 
                     fill="none" 
                     stroke="currentColor" 
                     viewBox="0 0 24 24" 
                     xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" 
                          stroke-linejoin="round" 
                          stroke-width="2" 
                          d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z">
                    </path>
                </svg>
                <h4 class="text-xl font-semibold text-gray-900 mb-4">Your wishlist is empty</h4>
                <p class="text-gray-600 mb-8">Start adding items to your wishlist to save them for later!</p>
                <a href="/allproduct" 
                   class="inline-flex items-center px-6 py-3 bg-[#8B7355] text-white font-semibold rounded-lg
                          hover:bg-[#A79277] transform hover:-translate-y-0.5 transition-all duration-300">
                    Continue Shopping
                    <svg class="w-5 h-5 ml-2" 
                         fill="none" 
                         stroke="currentColor" 
                         viewBox="0 0 24 24" 
                         xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" 
                              stroke-linejoin="round" 
                              stroke-width="2" 
                              d="M17 8l4 4m0 0l-4 4m4-4H3">
                        </path>
                    </svg>
                </a>
            </div>
        <% } %>
    </div>
</div>

<%- include('footer') %>



<script>
    document.querySelectorAll('.delete-link').forEach(button => {
        button.addEventListener('click', async function(e) {
            e.preventDefault();
            const productId = this.getAttribute('data-id');
            
            // Show confirmation dialog
            const result = await Swal.fire({
                title: 'Remove from Wishlist?',
                text: "Are you sure you want to remove this item?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#8B7355',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, remove it!',
                cancelButtonText: 'Cancel',
                background: '#fff',
                customClass: {
                    confirmButton: 'btn btn-brown',
                    cancelButton: 'btn btn-danger'
                }
            });

            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/delete-wish/${productId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        // Show success message
                        await Swal.fire({
                            title: 'Removed!',
                            text: 'Item has been removed from your wishlist.',
                            icon: 'success',
                            timer: 1500,
                            showConfirmButton: false,
                            background: '#fff',
                            customClass: {
                                popup: 'animated fadeInDown'
                            }
                        });

                        // Animate the card removal
                        const card = this.closest('.product-box');
                        card.style.transition = 'all 0.3s ease';
                        card.style.opacity = '0';
                        card.style.transform = 'scale(0.8)';
                        setTimeout(() => {
                            location.reload();
                        }, 300);
                    } else {
                        throw new Error(data.message || 'Failed to remove item');
                    }
                } catch (error) {
                    console.error('Error removing item:', error);
                    // Show error message
                    Swal.fire({
                        title: 'Error!',
                        text: 'Failed to remove item from wishlist',
                        icon: 'error',
                        confirmButtonColor: '#8B7355',
                        background: '#fff'
                    });
                }
            }
        });
    });

    
// add to cart


async function addToCart(productId) {
    try {
        const response = await fetch("/addToCart", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                productId: productId,
                quantity: 1, // Default to 1 for direct add-to-cart from listing
            }),
        });

        const data = await response.json();

        if (!response.ok) {
            // Handle unauthorized (not logged in) case
            if (response.status === 401) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Please Login',
                    text: 'You need to login to add items to cart',
                    showCancelButton: true,
                    confirmButtonText: 'Login',
                    confirmButtonColor: '#8B7355',
                    cancelButtonColor: '#d33',
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/login';
                    }
                });
                return;
            }
            
            throw new Error(data.message || 'Failed to add to cart');
        }

        // Success case
        Swal.fire({
            icon: 'success',
            title: 'Added to Cart!',
            text: data.message || 'Item successfully added to your cart',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            customClass: {
                popup: 'colored-toast'
            }
        });

        // Update cart count if it exists
        const cartCountElement = document.getElementById("cart-count");
        if (cartCountElement) {
            const currentCount = parseInt(cartCountElement.textContent || '0');
            cartCountElement.textContent = currentCount + 1;
        }

    } catch (error) {
        console.error('Error adding to cart:', error);
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: error.message || 'Something went wrong!',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            customClass: {
                popup: 'colored-toast'
            }
        });
    }
}

</script>




