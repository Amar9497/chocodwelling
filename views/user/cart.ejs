  <!-- Navbar -->
  <%- include('navbar') %>
  
<!-- alert -->
<%- include('alert') %>

<div class="min-h-screen bg-gray-50">
  <!-- Breadcrumbs -->
  <nav class="bg-white border-b">
      <div class="container mx-auto px-4 py-3">
          <div class="flex items-center space-x-2 text-sm">
              <a href="/home" class="text-[#8B7355] hover:text-[#A79277] transition-colors">Home</a>
              <span class="text-gray-400">/</span>
              <span class="text-gray-600">Shopping Cart</span>
          </div>
      </div>
  </nav>

  <!-- Main Content -->
  <main class="container mx-auto px-4 py-8">
      <h1 class="text-2xl md:text-3xl font-bold text-gray-800 mb-8">Shopping Cart</h1>
      
      <div class="flex flex-col lg:flex-row gap-8">
          <!-- Cart Items -->
          <section class="flex-1">
              <div class="bg-white rounded-xl shadow-sm overflow-hidden">
                  <div class="overflow-x-auto">
                      <table class="w-full">
                          <thead class="bg-gray-50 text-gray-600">
                              <tr>
                                  <th class="py-4 px-6 text-left">Product</th>
                                  <th class="py-4 px-6 text-left hidden md:table-cell">Price</th>
                                  <th class="py-4 px-6 text-left">Quantity</th>
                                  <th class="py-4 px-6 text-left hidden sm:table-cell">Subtotal</th>
                                  <th class="py-4 px-6 text-center">Action</th>
                              </tr>
                          </thead>
                          <tbody class="divide-y divide-gray-100">
                              <% if (cartItems.length) { %>
                                  <% cartItems.forEach(item => { %>
                                      <tr class="hover:bg-gray-50/50 transition-colors">
                                          <!-- Product Info -->
                                          <td class="py-4 px-6">
                                              <div class="flex items-center gap-4">
                                                  <img src="<%= item.product.productImage[0] %>" 
                                                       alt="<%= item.product.productName %>"
                                                       class="w-16 h-16 object-cover rounded-lg" 
                                                  />
                                                  <div>
                                                      <h3 class="font-medium text-gray-900"><%= item.product.productName %></h3>
                                                      <p class="text-sm text-gray-500">Weight: <%= item.product.productVariants[0].weight %></p>
                                                  </div>
                                              </div>
                                          </td>

                                          <!-- Price -->
                                          <td class="py-4 px-6 hidden md:table-cell">
                                              <div class="space-y-1">
                                                  <% if (item.discount > 0) { %>
                                                      <div class="text-lg font-medium text-gray-900">₹<%= item.discountedPrice.toFixed(2) %></div>
                                                      <div class="text-sm text-gray-500 line-through">₹<%= item.basePrice.toFixed(2) %></div>
                                                      <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                                          <%= item.discount %>% OFF
                                                      </span>
                                                  <% } else { %>
                                                      <div class="text-lg font-medium text-gray-900">₹<%= item.basePrice.toFixed(2) %></div>
                                                  <% } %>
                                              </div>
                                          </td>

                                          <!-- Quantity Selector -->
                                          <td class="py-4 px-6">
                                              <div class="flex items-center gap-2">
                                                  <button onclick="updateQuantity('<%= item.product._id %>', -1)"
                                                          class="w-8 h-8 rounded-full bg-gray-100 hover:bg-gray-200 flex items-center justify-center transition-colors">
                                                      <span class="text-gray-600">−</span>
                                                  </button>
                                                  <span id="quantity-<%= item.product._id %>" 
                                                        class="w-8 text-center font-medium">
                                                      <%= item.quantity %>
                                                  </span>
                                                  <button onclick="updateQuantity('<%= item.product._id %>', 1)"
                                                          class="w-8 h-8 rounded-full bg-gray-100 hover:bg-gray-200 flex items-center justify-center transition-colors">
                                                      <span class="text-gray-600">+</span>
                                                  </button>
                                              </div>
                                          </td>

                                          <!-- Subtotal -->
                                          <td class="py-4 px-6 hidden sm:table-cell">
                                              <span id="subtotal-<%= item.product._id %>" class="font-medium text-gray-900">
                                                  ₹<%= item.subtotal.toFixed(2) %>
                                              </span>
                                          </td>

                                          <!-- Remove Button -->
                                          <td class="py-4 px-6 text-center">
                                              <button onclick="removeFromCart('<%= item.product._id %>')"
                                                      class="text-red-500 hover:text-red-600 transition-colors">
                                                      <svg
                                                      xmlns="http://www.w3.org/2000/svg"
                                                      class="h-5 w-5"
                                                      fill="none"
                                                      viewBox="0 0 24 24"
                                                      stroke="currentColor"
                                                    >
                                                      <path
                                                        stroke-linecap="round"
                                                        stroke-linejoin="round"
                                                        stroke-width="2"
                                                        d="M19 7L5 7M10 11V17M14 11V17M5 7L7 21H17L19 7H5Z"
                                                      />
                                                    </svg>
                                              </button>
                                          </td>
                                      </tr>
                                  <% }); %>
                              <% } else { %>
                                  <tr>
                                      <td colspan="5" class="py-8 text-center text-gray-500">
                                          Your cart is empty
                                      </td>
                                  </tr>
                              <% } %>
                          </tbody>
                      </table>
                  </div>
              </div>
          </section>

          <!-- Order Summary -->
          <aside class="w-full lg:w-80">
              <div class="bg-white rounded-xl shadow-sm p-6 sticky top-4">
                  <h2 class="text-lg font-semibold text-gray-900 mb-6">Order Summary</h2>
                  
                  <div class="space-y-4">
                      <div class="flex justify-between text-sm">
                          <span class="text-gray-600">Subtotal</span>
                          <span id="cart-subtotal" class="font-medium">₹<%= total.toFixed(2) %></span>
                      </div>

                      <div class="flex justify-between text-sm">
                          <span class="text-gray-600">Delivery Charge</span>
                          <span id="delivery-charge" class="font-medium">
                              <%= total < 500 ? `₹100.00` : 'Free' %>
                          </span>
                      </div>

                      <div class="flex justify-between text-sm text-green-600">
                          <span>Total Savings</span>
                          <span id="total-savings" class="font-medium">₹<%= totalSavings.toFixed(2) %></span>
                      </div>

                      <div class="h-px bg-gray-200 my-4"></div>

                      <div class="flex justify-between">
                          <span class="text-base font-semibold">Total</span>
                          <span id="final-total" class="text-lg font-bold text-[#8B7355]">
                              ₹<%= (total + (total < 500 ? 100 : 0)).toFixed(2) %>
                          </span>
                      </div>

                      <button onclick="window.location.href='/checkout'"
                              class="w-full mt-6 bg-[#8B7355] text-white py-3 px-4 rounded-lg
                                     hover:bg-[#A79277] transition-colors duration-300
                                     focus:outline-none focus:ring-2 focus:ring-[#8B7355] focus:ring-offset-2">
                          Proceed to Checkout
                      </button>
                  </div>
              </div>
          </aside>
      </div>
  </main>
</div>

  <!-- Footer -->
  <%- include('footer') %>

<script>
  
  async function updateQuantity(productId, change) {
    const quantitySpan = document.getElementById(`quantity-${productId}`);
    const currentQuantity = parseInt(quantitySpan.textContent);
    const newQuantity = currentQuantity + change;

    // Check minimum quantity
    if (newQuantity < 1) {
      Swal.fire({
        icon: "warning",
        text: "Quantity cannot be less than 1",
        toast: true,
        position: "top-end",
        timer: 2000,
        showConfirmButton: false,
      });
      return;
    }

    // Check maximum quantity
    if (newQuantity > 5) {
      Swal.fire({
        icon: "warning",
        text: "Maximum quantity allowed is 5",
        toast: true,
        position: "top-end",
        timer: 2000,
        showConfirmButton: false,
      });
      return;
    }

    try {
      const response = await fetch("/updateCart", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          productId: productId,
          quantity: newQuantity,
        }),
      });

      const data = await response.json();

      if (data.status) {
        // Update quantity display
        quantitySpan.textContent = newQuantity;

        // Update product subtotal
        const subtotalElement = document.getElementById(
          `subtotal-${productId}`
        );
        if (subtotalElement) {
          subtotalElement.textContent = `₹ ${data.subtotal.toFixed(2)}`;
        }

        // Update cart totals
        updateCartTotals(data);

        // Update price display
        const priceCell = subtotalElement.closest("tr").querySelector(".price");
        if (priceCell && data.discount > 0) {
          priceCell.innerHTML = `
                    <span class="final-price">₹${data.discountedPrice.toFixed(
                      2
                    )}</span>
                    <div class="discount-badge">${data.discount}% OFF</div>
                `;
        }

        // Show success message
        Swal.fire({
          icon: "success",
          text: "Cart updated successfully",
          toast: true,
          position: "top-end",
          timer: 1500,
          showConfirmButton: false,
        });
      } else {
        throw new Error(data.message || "Failed to update cart");
      }
    } catch (error) {
      console.error("Error updating cart:", error);
      Swal.fire({
        icon: "error",
        text: error.message || "Failed to update cart",
        toast: true,
        position: "top-end",
        timer: 2000,
        showConfirmButton: false,
      });
    }
  }

  // Add this new function to handle cart totals updates
  function updateCartTotals(data) {
    // Update total savings
    const totalSavingsElement = document.getElementById("total-savings");
    if (totalSavingsElement) {
      totalSavingsElement.textContent = `Rs. ${data.totalSavings.toFixed(2)}`;
    }

    // Update subtotal
    const subtotalElement = document.getElementById("cart-subtotal");
    if (subtotalElement) {
      subtotalElement.textContent = `Rs. ${data.total.toFixed(2)}`;
    }

    // Update delivery charge
    const deliveryChargeElement = document.getElementById("delivery-charge");
    if (deliveryChargeElement) {
      const deliveryCharge = data.total < 500 ? 100 : 0;
      deliveryChargeElement.textContent =
        deliveryCharge > 0 ? `Rs. ${deliveryCharge.toFixed(2)}` : "Free";
    }

    // Update final total
    const finalTotalElement = document.getElementById("final-total");
    if (finalTotalElement) {
      const deliveryCharge = data.total < 500 ? 100 : 0;
      const finalTotal = data.total + deliveryCharge;
      finalTotalElement.textContent = `Rs. ${finalTotal.toFixed(2)}`;
    }
  }

  // Also update your removeFromCart function 
  async function removeFromCart(productId) {
    const result = await Swal.fire({
      title: "Are you sure?",
      text: "You want to remove this item from cart?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "Yes, remove it!",
      cancelButtonText: "Cancel",
    });

    if (result.isConfirmed) {
      try {
        const response = await fetch("/removeFromCart", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ productId }),
        });

        const data = await response.json();

        if (data.status) {
          // Remove the product row
          const productRow = document.querySelector(
            `tr:has(button[onclick*="${productId}"])`
          );
          if (productRow) {
            productRow.remove();
          }

          // Update cart totals
          updateCartTotals({
            total: data.total,
            totalSavings: data.totalSavings || 0,
          });

          // Show success message
          Swal.fire({
            icon: "success",
            title: "Removed!",
            text: "Item has been removed from cart",
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 1500,
          });

          // If cart is empty, refresh the page
          if (data.isEmpty) {
            location.reload();
          }
        } else {
          throw new Error(data.message || "Failed to remove item");
        }
      } catch (error) {
        console.error("Error removing item:", error);
        Swal.fire({
          icon: "error",
          title: "Oops...",
          text: error.message || "Something went wrong!",
          toast: true,
          position: "top-end",
          timer: 2000,
        });
      }
    }
  }

  // Update the updateCartTotals function to handle empty cart case
  function updateCartTotals(data) {
    // Update total savings
    const totalSavingsElement = document.getElementById("total-savings");
    if (totalSavingsElement) {
      totalSavingsElement.textContent = `Rs. ${(data.totalSavings || 0).toFixed(
        2
      )}`;
    }

    // Update subtotal
    const subtotalElement = document.getElementById("cart-subtotal");
    if (subtotalElement) {
      subtotalElement.textContent = `Rs. ${(data.total || 0).toFixed(2)}`;
    }

    // Update delivery charge
    const deliveryChargeElement = document.getElementById("delivery-charge");
    if (deliveryChargeElement) {
      const deliveryCharge = (data.total || 0) < 500 ? 100 : 0;
      deliveryChargeElement.textContent =
        deliveryCharge > 0 ? `Rs. ${deliveryCharge.toFixed(2)}` : "Free";
    }

    // Update final total
    const finalTotalElement = document.getElementById("final-total");
    if (finalTotalElement) {
      const deliveryCharge = (data.total || 0) < 500 ? 100 : 0;
      const finalTotal = (data.total || 0) + deliveryCharge;
      finalTotalElement.textContent = `Rs. ${finalTotal.toFixed(2)}`;
    }
  }
</script>
